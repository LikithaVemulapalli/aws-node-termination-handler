name: Release

on:
  push:
    tags:
      - "v1.*.*"

permissions:
  contents: write # required for uploading releases

env:
  DEFAULT_GO_VERSION: ^1.19.3
  GITHUB_USERNAME: ${{ secrets.LIKITHA_GITHUB_USERNAME }}
  GITHUB_TOKEN: ${{ secrets.LIKITHA_GITHUB_TOKEN }}
  LIKITHA_WEBHOOK_URL: ${{ secrets.LIKITHA_WEBHOOK_URL }}

jobs:
  releaseLinux:
    name: Release Linux
    runs-on: ubuntu-20.04
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Release Linux Assets
      run: make release
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIKITHA_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIKITHA_SECRET_ACCESS_KEY }}
        # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}


  release:
    name: Release
    runs-on: ubuntu-20.04
    # needs: [releaseLinux, releaseWindows]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.DEFAULT_GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Sync Helm Chart Catalog information
      run: make sync-catalog-information
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIKITHA_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIKITHA_SECRET_ACCESS_KEY }}
        # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    
    - name: Sync Helm Chart to ECR Public
      run: make push-helm-charts
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIKITHA_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIKITHA_SECRET_ACCESS_KEY }}
        # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    
    - name: Sync Readme to ECR Public
      run: make sync-readme-to-ecr-public
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.LIKITHA_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.LIKITHA_SECRET_ACCESS_KEY }}
        # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
